@page "/R_Productos"

@page "/R_Productos/{ProductoId:int}"

@inject IToastService toastService
@inject IToastService toast

<EditForm Model="producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

     <div class="card shadow-lg">

        <div class="card shadow-lg">

            <div class="card-header">
                <h3 class="card-title">Registro de Productos</h3>
            </div>

            <div class="card-body">

                @* Buscar *@
                <div class="form-group align-items-right">

                    <div class="form-row">

                        <label>Producto Id</label>

                        <div class="input-group">

                            <InputNumber @bind-Value="producto.ProductoId" class="form-control col-4 col" />

                            <div class="input-group-append col">
                                <button type="button" class="btn btn-primary input-group-text "
                                    @onclick="Buscar"><span class="oi oi-magnifying-glass">Buscar</span></button>
                            </div>
                        </div>
                    </div>                 
                </div>

                <hr>

                <div class="row">
 

                    @* Descripcion *@
                    <div class="form-group mt-3">
                        <label>Descripci&oacute;n</label>
                        <InputText class="form-control" @bind-Value="producto.Descripcion" placeholder="Descripción Producto"/>
                        <ValidationMessage For="@(() => producto.Descripcion)" />
                    </div>

                     @* Costo *@
                    <div class="form-group mt-3 ">
                        <label>Costo</label>
                        <InputNumber class="form-control" @bind-Value="producto.Costo" @onchange="CalculoValorInventario"/>
                        <ValidationMessage For="@(() => producto.Costo)" />
                    </div>

                    @* Existencia *@
                    <div class="form-group mt-3 ">
                        <label>Existencia</label>
                        <InputNumber class="form-control" @bind-Value="producto.Existencia" @onchange="CalculoValorInventario" />
                        <ValidationMessage For="@(() => producto.Existencia)" />
                    </div>

                       @* Precio *@
                    <div class="form-group col">
                        <label>Precio</label>
                        <InputNumber class="form-control" @bind-Value="producto.Precio" />
                        <ValidationMessage For="@(() => producto.Precio)" />
                    </div>

                      @* Fecha *@
                <div class="form-group">
                    <label>Fecha</label>
                    <InputDate @bind-Value="producto.FechaVencimiento" />
                    <ValidationMessage For="@(() =>producto.FechaVencimiento)" />
                </div>

                   

                    @* Valor de Inventario *@
                    <div class="form-group mt-3 ">
                        <label>Valor Inventario</label>
                        <InputNumber readonly class="form-control" @bind-Value="producto.ValorInventario" />
                        <ValidationMessage For="@(() => producto.ValorInventario)" />
                    </div>

                     @* Ganancia *@
                    <div class="form-group col">
                        <label>Ganancia</label>
                        <InputNumber readonly class="form-control" @bind-Value="producto.Ganancia" />
                        <ValidationMessage For="@(() => producto.Ganancia)" />
                    </div>

                </div>

                <br>

                <hr>

                @* Productos Detalle *@
                <div class="card align-items-center">

                    <div class="card-header align-items-center">
                        <h3>Detalle</h3>
                    </div>

                    <form>
                        <div class="input-group d-flex align-items-end">

                        
                            

                            @* Presentacion *@
                            <div class="form-group col">
                                <label>Presentación</label>
                                <InputText class="form-control" @bind-Value="Presentacion" placeholder="Presentación del producto"/>
                                <ValidationMessage For="@(() => Presentacion)" />
                            </div>

                            @* Cantidad *@
                            <div class="form-group col">
                                <label>Cantidad</label>
                                <InputNumber class="form-control" @bind-Value="Cantidad" />
                                <ValidationMessage For="@(() => Cantidad)" />
                               
                            </div>

                            @* Precio *@
                            <div class="form-group col">
                                <label>Precio</label>
                                <InputNumber class="form-control" @bind-Value="Precio" />
                                <ValidationMessage For="@(() => Precio)" />
                                
                            </div>

                            <button type="button" class="btn btn-warning" @onclick="AgregarDetalle">
                                <span class="oi oi-plus">Agregar</span>
                            </button>

                        </div>
                        
                        <br>

                        <table class="table table-secondary">
                            <thead class="thead-dark">
                                <tr class="table-info">
                                    

                                    <th>Presentación</th>

                                    <th>Cantidad</th>

                                    <th>Precio</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in producto.Detalle)
                                {
                                    <tr>
                                       
                                        <td>@item.Presentacion</td>
                                        <td>@item.Cantidad</td>
                                        <td>RD$ @item.Precio</td>
                                        <td><span class="btn btn-sm btn-outline-primary oi oi-ban" href="#"  @onclick=" (() => RemoverFila(item)) "> Remover</span></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </form>

                </div>
            </div>

            <div class="card-footer">

                @* Botones *@
                <div class="form-group text-center" display: inline-block>
                    
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <span class="oi oi-plus">Nuevo</span>
                    </button>
                    
                    <button type="submit" class="btn btn-lg btn-success" @onclick="Guardar">
                    <span class="oi oi-clipboard">Guardar</span>
                    </button>
                    
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <span class="oi oi-circle-x">Eliminar</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

</EditForm>



@code {

    public Productos producto { get; set; } = new Productos();
    public string Presentacion { get; set; }

    
    public int Cantidad { get; set; }
    public double Precio { get; set; }

    [Parameter]
    public int ProductoId { get; set; }

    [Inject]
    public ProductoBLL productosBLL { get; set; }

    protected override void OnInitialized()
    {
        producto.ProductoId = ProductoId;
        Buscar();
    }

    public void Buscar()
    {
        if (this.producto.ProductoId > 0)
        {
            Productos encontrado = productosBLL.Buscar(this.producto.ProductoId);
            
            if (encontrado != null)
            {
                this.producto = encontrado;
            }
            else
            {
                toastService.ShowError("Producto no encontrado");
            }
        }
    }
    public void Nuevo()
    {
        producto = new Productos();
    }

    public void NuevoDetalle()
    {
        Presentacion = "";

        Cantidad = 0;

        Precio = 0;
    }
    public void Guardar()
    {
        CalculoValorInventario();
        Ganancia();

        if (productosBLL.Guardar(producto))
        {
            toastService.ShowInfo("Se guardó exitosamente");
        }
        else
            toastService.ShowError("No se pudo guardar.");
    }
    public void Eliminar()
    {
        if (productosBLL.Eliminar(producto.ProductoId))
        {
            Nuevo();
            toastService.ShowSuccess("Eliminación con exito");
        }
        else
        {
            toastService.ShowError("Error, Eliminación fallida");
        }
    }
    public void AgregarDetalle()
    {
        this.producto.Detalle.Add(new ProductosDetalle(Presentacion, Cantidad, Precio));
        NuevoDetalle();
    }

    private void RemoverFila(ProductosDetalle item)
    {
        this.producto.Detalle.Remove(item);
    }

     public void CostoChanged()
    {
        Ganancia();
        CalculoValorInventario();
    }
    public void GananciaChanged()
    {
        producto.Ganancia = Convert.ToInt32(((producto.Precio - producto.Costo) / producto.Costo) * 100);
    }


    private void CalculoValorInventario()
    {
                producto.ValorInventario = producto.Costo * producto.Existencia;
    }

 public void Ganancia()
    {
        producto.Ganancia = (int)((producto.Precio - producto.Costo) / producto.Costo) * 100;
    }

}